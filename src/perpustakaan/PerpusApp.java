/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan;

import com.formdev.flatlaf.FlatLightLaf;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.type.TypeReference;
import java.awt.*;
import javax.swing.*;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 *
 * @author User
 */
public class PerpusApp extends javax.swing.JFrame {

    /**
     * Creates new form Apk
     */
    public PerpusApp() {
        initComponents();
    }
    
    private static final String DATABASE_FILE = "db/data_peminjaman.json";
    
    private static int mencariID(List<Map<String, Object>> dataList, String IDpeminjam) {
		for (int i = 0; i < dataList.size(); i++) {
			Map<String, Object> data = dataList.get(i);
			if (data.containsKey("id_peminjam") && data.get("id_peminjam").equals(IDpeminjam)) {
                        return i;
                    }
		}
		return -1; // Borrower not found
	}

    private static void saveToJsonFile(String fileName, List<Map<String, Object>> dataList) {
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            // Write the list of data to the JSON file
            objectMapper.writeValue(new File(fileName), dataList);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static List<Map<String, Object>> readFromJsonFile(String fileName) {
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            // Read the list of data from the JSON file
            return objectMapper.readValue(new File(fileName), new TypeReference<List<Map<String, Object>>>() {
            });
        } catch (IOException e) {
            // If the file does not exist or is empty, return an empty list
            return new ArrayList<>();
        }
    }

    private void navigasi(JPanel kemana) {
        parent.removeAll();
        parent.add(kemana);
        parent.repaint();
        parent.revalidate();
    }
    
    public static void clear(JPanel panel) {
        for (Component component : panel.getComponents()) {
            if (component instanceof JTextField textField) {
                textField.setText("");
            } else if (component instanceof JCheckBox checkBox) {
                checkBox.setSelected(false);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parent = new javax.swing.JPanel();
        paneLIndex = new javax.swing.JPanel();
        subPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnPeminjaman = new javax.swing.JButton();
        btnPengembalian = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelPinjam = new javax.swing.JPanel();
        subPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inNama1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inID1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        inWaktu1 = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        btnSimpanData = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        buku1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        buku2 = new javax.swing.JCheckBox();
        buku3 = new javax.swing.JCheckBox();
        buku4 = new javax.swing.JCheckBox();
        buku5 = new javax.swing.JCheckBox();
        buku6 = new javax.swing.JCheckBox();
        tidakValid = new javax.swing.JLabel();
        panelKembali = new javax.swing.JPanel();
        subPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        inNama2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        inID2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        inWaktu2 = new javax.swing.JTextField();
        backButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        bukuBalik1 = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        bukuBalik2 = new javax.swing.JCheckBox();
        bukuBalik3 = new javax.swing.JCheckBox();
        bukuBalik4 = new javax.swing.JCheckBox();
        bukuBalik5 = new javax.swing.JCheckBox();
        bukuBalik6 = new javax.swing.JCheckBox();
        tidakValid2 = new javax.swing.JLabel();
        btnCekData = new javax.swing.JButton();
        panelOutput = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        infoStatus = new javax.swing.JLabel();
        out1 = new javax.swing.JLabel();
        out2 = new javax.swing.JLabel();
        out3 = new javax.swing.JLabel();
        outListBuku = new javax.swing.JScrollPane();
        outDaftar = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        out4 = new javax.swing.JLabel();
        backButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library System");
        setMinimumSize(new java.awt.Dimension(505, 353));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 319));

        parent.setBackground(new java.awt.Color(255, 255, 255));
        parent.setLayout(new java.awt.CardLayout());

        paneLIndex.setBackground(new java.awt.Color(255, 255, 255));
        paneLIndex.setLayout(null);

        subPanel1.setBackground(new java.awt.Color(188, 197, 163));
        subPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Selamat Datang!");
        subPanel1.add(jLabel3);
        jLabel3.setBounds(20, 50, 196, 36);

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("di sistem perpustakaan,");
        subPanel1.add(jLabel4);
        jLabel4.setBounds(20, 80, 157, 20);

        btnPeminjaman.setBackground(new java.awt.Color(252, 255, 248));
        btnPeminjaman.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnPeminjaman.setForeground(new java.awt.Color(102, 102, 0));
        btnPeminjaman.setText("Peminjaman Buku");
        btnPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeminjamanActionPerformed(evt);
            }
        });
        subPanel1.add(btnPeminjaman);
        btnPeminjaman.setBounds(20, 150, 190, 37);

        btnPengembalian.setBackground(new java.awt.Color(252, 255, 248));
        btnPengembalian.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnPengembalian.setForeground(new java.awt.Color(102, 102, 0));
        btnPengembalian.setText("Pengembalian Buku");
        btnPengembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPengembalianActionPerformed(evt);
            }
        });
        subPanel1.add(btnPengembalian);
        btnPengembalian.setBounds(20, 210, 190, 37);

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("pilih operasi yang ingin anda lakukan");
        subPanel1.add(jLabel5);
        jLabel5.setBounds(20, 90, 210, 30);

        paneLIndex.add(subPanel1);
        subPanel1.setBounds(260, 0, 240, 320);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Untitled design.png"))); // NOI18N
        paneLIndex.add(jLabel1);
        jLabel1.setBounds(20, 50, 220, 190);

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Librarian System");
        paneLIndex.add(jLabel2);
        jLabel2.setBounds(50, 230, 160, 15);

        parent.add(paneLIndex, "card2");

        panelPinjam.setLayout(null);

        subPanel2.setBackground(new java.awt.Color(188, 197, 163));
        subPanel2.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Data Peminjam");
        subPanel2.add(jLabel6);
        jLabel6.setBounds(27, 20, 210, 30);

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 0));
        jLabel7.setText("Nama");
        subPanel2.add(jLabel7);
        jLabel7.setBounds(20, 80, 220, 15);

        inNama1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        subPanel2.add(inNama1);
        inNama1.setBounds(20, 100, 220, 25);

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 0));
        jLabel8.setText("ID Peminjam");
        subPanel2.add(jLabel8);
        jLabel8.setBounds(20, 140, 210, 15);

        inID1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        subPanel2.add(inID1);
        inID1.setBounds(20, 160, 220, 25);

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 0));
        jLabel9.setText("Waktu Pinjam (hari)");
        subPanel2.add(jLabel9);
        jLabel9.setBounds(20, 200, 120, 15);

        inWaktu1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        subPanel2.add(inWaktu1);
        inWaktu1.setBounds(20, 220, 220, 25);

        backButton.setBackground(new java.awt.Color(252, 255, 248));
        backButton.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(102, 102, 0));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        subPanel2.add(backButton);
        backButton.setBounds(20, 280, 76, 26);

        panelPinjam.add(subPanel2);
        subPanel2.setBounds(0, 0, 270, 320);

        btnSimpanData.setBackground(new java.awt.Color(188, 197, 163));
        btnSimpanData.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnSimpanData.setForeground(new java.awt.Color(51, 51, 0));
        btnSimpanData.setText("Submit");
        btnSimpanData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanDataActionPerformed(evt);
            }
        });
        panelPinjam.add(btnSimpanData);
        btnSimpanData.setBounds(400, 280, 76, 26);

        jLabel10.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Daftar Buku");
        panelPinjam.add(jLabel10);
        jLabel10.setBounds(300, 20, 170, 32);

        buku1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        buku1.setForeground(new java.awt.Color(102, 102, 0));
        buku1.setText("Bersatir dengan Matematis");
        panelPinjam.add(buku1);
        buku1.setBounds(300, 100, 180, 19);

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 0));
        jLabel11.setText("Buku yang dipinjam");
        panelPinjam.add(jLabel11);
        jLabel11.setBounds(300, 80, 120, 15);

        buku2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        buku2.setForeground(new java.awt.Color(102, 102, 0));
        buku2.setText("10 Jasa Besar Soehardi");
        panelPinjam.add(buku2);
        buku2.setBounds(300, 120, 180, 19);

        buku3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        buku3.setForeground(new java.awt.Color(102, 102, 0));
        buku3.setText("Mein Kraft");
        panelPinjam.add(buku3);
        buku3.setBounds(300, 140, 180, 19);

        buku4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        buku4.setForeground(new java.awt.Color(102, 102, 0));
        buku4.setText("Analog");
        panelPinjam.add(buku4);
        buku4.setBounds(300, 160, 180, 19);

        buku5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        buku5.setForeground(new java.awt.Color(102, 102, 0));
        buku5.setText("13cm");
        panelPinjam.add(buku5);
        buku5.setBounds(300, 180, 180, 19);

        buku6.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        buku6.setForeground(new java.awt.Color(102, 102, 0));
        buku6.setText("10 Jujur Besar Soehardi");
        panelPinjam.add(buku6);
        buku6.setBounds(300, 200, 180, 19);

        tidakValid.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        tidakValid.setForeground(new java.awt.Color(153, 153, 0));
        tidakValid.setText("*centang buku yg akan dipinjam");
        panelPinjam.add(tidakValid);
        tidakValid.setBounds(300, 240, 180, 13);

        parent.add(panelPinjam, "card3");

        panelKembali.setLayout(null);

        subPanel3.setBackground(new java.awt.Color(188, 197, 163));
        subPanel3.setLayout(null);

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Data Peminjam");
        subPanel3.add(jLabel13);
        jLabel13.setBounds(27, 20, 210, 30);

        jLabel14.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 0));
        jLabel14.setText("Nama");
        subPanel3.add(jLabel14);
        jLabel14.setBounds(20, 80, 220, 15);

        inNama2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        subPanel3.add(inNama2);
        inNama2.setBounds(20, 100, 220, 25);

        jLabel15.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 0));
        jLabel15.setText("ID Membership");
        subPanel3.add(jLabel15);
        jLabel15.setBounds(20, 140, 210, 15);

        inID2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        subPanel3.add(inID2);
        inID2.setBounds(20, 160, 220, 25);

        jLabel16.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 0));
        jLabel16.setText("Waktu Dikembalikan (hari ke-)");
        subPanel3.add(jLabel16);
        jLabel16.setBounds(20, 200, 220, 15);

        inWaktu2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        subPanel3.add(inWaktu2);
        inWaktu2.setBounds(20, 220, 220, 25);

        backButton1.setBackground(new java.awt.Color(252, 255, 248));
        backButton1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        backButton1.setForeground(new java.awt.Color(102, 102, 0));
        backButton1.setText("Back");
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });
        subPanel3.add(backButton1);
        backButton1.setBounds(20, 280, 76, 26);

        panelKembali.add(subPanel3);
        subPanel3.setBounds(0, 0, 270, 320);

        jLabel17.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Daftar Buku");
        panelKembali.add(jLabel17);
        jLabel17.setBounds(300, 20, 170, 32);

        bukuBalik1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        bukuBalik1.setForeground(new java.awt.Color(102, 102, 0));
        bukuBalik1.setText("Bersatir dengan Matematis");
        panelKembali.add(bukuBalik1);
        bukuBalik1.setBounds(300, 100, 180, 19);

        jLabel18.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 0));
        jLabel18.setText("Buku yang dikembalikan");
        panelKembali.add(jLabel18);
        jLabel18.setBounds(300, 80, 150, 15);

        bukuBalik2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        bukuBalik2.setForeground(new java.awt.Color(102, 102, 0));
        bukuBalik2.setText("10 Jasa Besar Soehardi");
        panelKembali.add(bukuBalik2);
        bukuBalik2.setBounds(300, 120, 180, 19);

        bukuBalik3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        bukuBalik3.setForeground(new java.awt.Color(102, 102, 0));
        bukuBalik3.setText("Mein Kraft");
        panelKembali.add(bukuBalik3);
        bukuBalik3.setBounds(300, 140, 180, 19);

        bukuBalik4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        bukuBalik4.setForeground(new java.awt.Color(102, 102, 0));
        bukuBalik4.setText("Analog");
        panelKembali.add(bukuBalik4);
        bukuBalik4.setBounds(300, 160, 180, 19);

        bukuBalik5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        bukuBalik5.setForeground(new java.awt.Color(102, 102, 0));
        bukuBalik5.setText("13cm");
        panelKembali.add(bukuBalik5);
        bukuBalik5.setBounds(300, 180, 180, 19);

        bukuBalik6.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        bukuBalik6.setForeground(new java.awt.Color(102, 102, 0));
        bukuBalik6.setText("10 Jujur Besar Soehardi");
        panelKembali.add(bukuBalik6);
        bukuBalik6.setBounds(300, 200, 180, 19);

        tidakValid2.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        tidakValid2.setForeground(new java.awt.Color(153, 153, 0));
        tidakValid2.setText("*centang buku yg akan dikembalikan");
        panelKembali.add(tidakValid2);
        tidakValid2.setBounds(300, 240, 180, 13);

        btnCekData.setBackground(new java.awt.Color(188, 197, 163));
        btnCekData.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnCekData.setForeground(new java.awt.Color(51, 51, 0));
        btnCekData.setText("Submit");
        btnCekData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCekDataActionPerformed(evt);
            }
        });
        panelKembali.add(btnCekData);
        btnCekData.setBounds(400, 280, 76, 26);

        parent.add(panelKembali, "card6");

        panelOutput.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(188, 197, 163));
        jPanel1.setLayout(null);

        infoStatus.setFont(new java.awt.Font("Roboto Bk", 0, 18)); // NOI18N
        infoStatus.setForeground(new java.awt.Color(255, 255, 255));
        infoStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoStatus.setText("Peminjaman/Pengembalian Berhasil!");
        jPanel1.add(infoStatus);
        infoStatus.setBounds(90, 20, 310, 50);

        panelOutput.add(jPanel1);
        jPanel1.setBounds(0, 0, 520, 80);

        out1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        out1.setForeground(new java.awt.Color(51, 51, 0));
        out1.setText("output_1");
        panelOutput.add(out1);
        out1.setBounds(40, 156, 240, 20);

        out2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        out2.setForeground(new java.awt.Color(51, 51, 0));
        out2.setText("output_2");
        panelOutput.add(out2);
        out2.setBounds(40, 180, 240, 20);

        out3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        out3.setForeground(new java.awt.Color(51, 51, 0));
        out3.setText("output_3");
        panelOutput.add(out3);
        out3.setBounds(40, 200, 240, 30);

        outDaftar.setColumns(20);
        outDaftar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        outDaftar.setForeground(new java.awt.Color(51, 51, 0));
        outDaftar.setRows(5);
        outListBuku.setViewportView(outDaftar);

        panelOutput.add(outListBuku);
        outListBuku.setBounds(290, 150, 180, 110);

        jLabel20.setFont(new java.awt.Font("Roboto Bk", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 0));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Daftar buku ");
        panelOutput.add(jLabel20);
        jLabel20.setBounds(290, 110, 180, 30);

        jLabel21.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Data Peminjam");
        panelOutput.add(jLabel21);
        jLabel21.setBounds(40, 110, 180, 30);

        doneButton.setBackground(new java.awt.Color(188, 197, 163));
        doneButton.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        doneButton.setForeground(new java.awt.Color(51, 51, 0));
        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });
        panelOutput.add(doneButton);
        doneButton.setBounds(370, 270, 100, 30);

        out4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        out4.setForeground(new java.awt.Color(51, 51, 0));
        out4.setText("output_4");
        panelOutput.add(out4);
        out4.setBounds(40, 230, 220, 20);

        backButton2.setBackground(new java.awt.Color(252, 255, 248));
        backButton2.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        backButton2.setForeground(new java.awt.Color(102, 102, 0));
        backButton2.setText("Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });
        panelOutput.add(backButton2);
        backButton2.setBounds(30, 270, 100, 30);

        parent.add(panelOutput, "card4");

        getContentPane().add(parent, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPeminjamanActionPerformed
        // TODO add your handling code here:
        navigasi(panelPinjam);
    }//GEN-LAST:event_btnPeminjamanActionPerformed

    private void btnPengembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPengembalianActionPerformed
        // TODO add your handling code here:
        navigasi(panelKembali);
    }//GEN-LAST:event_btnPengembalianActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        navigasi(paneLIndex);
    }//GEN-LAST:event_backButtonActionPerformed

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        // TODO add your handling code here:
        navigasi(paneLIndex);
    }//GEN-LAST:event_backButton1ActionPerformed

    private void btnSimpanDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanDataActionPerformed
        JTextField[] semuaTFields = {inNama1, inID1, inWaktu1};
        boolean adakahYangKosong = true;
        
        // nahh loop ini gunanya buat cek ada ngga yang kosong textfields nya
        for (JTextField ada : semuaTFields) {
            if (ada.getText().trim().isEmpty()) {
            adakahYangKosong = false;
            break;  //kalo ketemu textfields yang kosong loop nya berenti
            }
        }
        
        
        if (adakahYangKosong) //ini codingan THEN
        {
            List<Map<String, Object>> dataList = readFromJsonFile(DATABASE_FILE);

            Map<String, Object> dataToSave = new HashMap<>();
            List<String> bukuPilihan = new ArrayList<>();
        
            for (int i = 1; i <= 6; i++) {
                JCheckBox checkBoxPilihan;

                switch (i) {
                    case 1 -> checkBoxPilihan = buku1;
                    case 2 -> checkBoxPilihan = buku2;
                    case 3 -> checkBoxPilihan = buku3;
                    case 4 -> checkBoxPilihan = buku4;
                    case 5 -> checkBoxPilihan = buku5;
                    case 6 -> checkBoxPilihan = buku6;
                    default -> {
                    // ini kalo gak ada yang dicentang
                    continue;
                    }
                }

            if (checkBoxPilihan.isSelected()) {
                    bukuPilihan.add(checkBoxPilihan.getText());
                }
            }
            
            Integer waktuPinjam = Integer.valueOf(inWaktu1.getText());
            
            dataToSave.put("id_peminjam", inID1.getText());
            dataToSave.put("nama_peminjam", inNama1.getText());
            dataToSave.put("hari_pinjam", waktuPinjam);
            dataToSave.put("buku_dipinjam", bukuPilihan);
            
            dataList.add(dataToSave);
            saveToJsonFile(DATABASE_FILE, dataList);
            
            navigasi(panelOutput);
            
            infoStatus.setText("Peminjaman Buku Berhasil!");
            out1.setText("Nama : " + inNama1.getText());
            out2.setText("ID Peminjam : " + inID1.getText());
            out3.setText("Waktu Pinjam : " + Integer.toString(waktuPinjam) + " hari");
            out4.setText("Jumlah Buku : " + bukuPilihan.size() + " buku");
            
            outDaftar.append("Buku yang dipinjam: \n");
        
            for(String dP : bukuPilihan){
            outDaftar.append(" > " + dP + "\n");
            }   
        }
        else // ini codingan ya... ELSE :v
        {
            tidakValid.setForeground(Color.red);
            tidakValid.setText("Terdapat data kosong / tidak valid!");
        }
    }//GEN-LAST:event_btnSimpanDataActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
        
        outDaftar.selectAll();
        outDaftar.replaceSelection(null);
        
        List<Map<String, Object>> dataList = readFromJsonFile(DATABASE_FILE);
        String kelarBalik = infoStatus.getText();
        if (kelarBalik == "Pengembalian Buku Berhasil!"){
            // ini buat hapus data dari db setelah pengembalian  
            dataList.remove(mencariID(dataList, inID2.getText()));
            saveToJsonFile(DATABASE_FILE, dataList);
            
            clear(subPanel3);
            clear(panelKembali);
            navigasi(paneLIndex);
            
        }else{
            
            clear(subPanel2);
            clear(panelPinjam);
            navigasi(paneLIndex);
        }
    }//GEN-LAST:event_doneButtonActionPerformed

    private void btnCekDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCekDataActionPerformed
        // TODO add your handling code here:
        int dendaPerBuku = 50000;
	int dendaPerHari = 25000;
        int dendaWaktu;
        int dendaHilang;
        int totalDenda;
        
        JTextField[] semuaTFields = {inNama2, inID2, inWaktu2};
        boolean adakahYangKosong = true;
        
        // nahh loop ini gunanya buat cek ada ngga yang kosong textfields nya
        for (JTextField a : semuaTFields) {
            if (a.getText().trim().isEmpty()) {
            adakahYangKosong = false;
            break;  //kalo ketemu textfields yang kosong loop nya berenti
            }
        }
        
        /*if else jalan tergantung boolean nya,
        klo gaada TextFields yang kosong nilai nya true
        yang jalan codingan THEN, sebaliknya klo ada yg kosong
        yang jalan ELSE*/
        
        if(adakahYangKosong)
        {
           List<Map<String, Object>> dataList = readFromJsonFile(DATABASE_FILE);
           
           List<String> bukuDikembalikan = new ArrayList<>();
           
           for (int i = 1; i <= 6; i++) {
           JCheckBox checkBoxPilihan;
           switch (i) {
                case 1 -> checkBoxPilihan = bukuBalik1;
                case 2 -> checkBoxPilihan = bukuBalik2;
                case 3 -> checkBoxPilihan = bukuBalik3;
                case 4 -> checkBoxPilihan = bukuBalik4;
                case 5 -> checkBoxPilihan = bukuBalik5;
                case 6 -> checkBoxPilihan = bukuBalik6;
                default -> {
                // ini kalo gak ada yang dicentang
                    continue;
                    }
                }

            if (checkBoxPilihan.isSelected()) {
                    bukuDikembalikan.add(checkBoxPilihan.getText());
                }
            }
           
           
            int IndexID = mencariID(dataList, inID2.getText());
            
            if(IndexID != -1)
            {
                Map<String, Object> dataFromDatabase = dataList.get(IndexID);
                Integer hariKembali = Integer.valueOf(inWaktu2.getText());
                int hariTelat;
                
                if ((int) dataFromDatabase.get("hari_pinjam") < hariKembali) 
                {
                    hariTelat = hariKembali - (int) dataFromDatabase.get("hari_pinjam");
                    dendaWaktu = hariTelat * dendaPerHari;
                } 
                else 
                {
                    hariTelat = 0;
                    dendaWaktu = 0;
                }
                
                /*Membandingkan isi array buku yang dikembalikan dan buku yang dipinjam jika ada elemen
                 pada array bukuDipinjam yang tidak terdapat pada bukuDikembalikan. nanti nambah 1 bukuhilang*/
                Object bukuDipinjamData = dataFromDatabase.get("buku_dipinjam");
                List<String> bukuDipinjamList = (List<String>) bukuDipinjamData;
                int bukuHilang = 0;
                for (String isiListPinjam : bukuDipinjamList) {
                if (!bukuDikembalikan.contains(isiListPinjam)) {
                        bukuHilang++;
                    }
                }
                
                if (bukuHilang > 0)
                {
                    dendaHilang = bukuHilang * dendaPerBuku;
                }
                else
                {
                    dendaHilang = 0;
                }
                
                totalDenda = dendaWaktu + dendaHilang;
                
                navigasi(panelOutput);
            
                infoStatus.setText("Pengembalian Buku Berhasil!");
                out1.setText( "Nama : " + inNama2.getText() );
                out2.setText( "Denda Kehilangan : Rp. " + dendaHilang + " (" + bukuHilang + " buku)" );
                out3.setText( "Denda Keterlambatan : Rp. " + dendaWaktu + " (" + hariTelat + " hari)" );
                out4.setText( "Total Denda : Rp. " + totalDenda );
                
                outDaftar.append("a. Buku yang dipinjam: \n");
                for (String outPj : bukuDipinjamList) {
                    outDaftar.append(" > " + outPj + "\n");
                }
                outDaftar.append(" Jumlah buku: " + bukuDipinjamList.size() + "\n\n");
                
                outDaftar.append("b. Buku yang dikembalikan: \n");
                for(String Blk : bukuDikembalikan){
                    outDaftar.append(" > " + Blk + "\n");
                }
                outDaftar.append(" Jumlah buku: " + bukuDikembalikan.size());

            }
            else
            {   
                tidakValid2.setForeground(Color.red);
                tidakValid2.setText("Data tidak ditemukan!");
            }
           
        }
        else
        {   
            tidakValid2.setForeground(Color.red);
            tidakValid2.setText("Terdapat data kosong / tidak valid!");
        }
    }//GEN-LAST:event_btnCekDataActionPerformed

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        String status = infoStatus.getText();
        if(status == "Pengembalian Buku Berhasil!"){
            outDaftar.selectAll();
            outDaftar.replaceSelection(null);
            navigasi(panelKembali);
        }else{
            outDaftar.selectAll();
            outDaftar.replaceSelection(null);
            navigasi(panelPinjam);
        }
    }//GEN-LAST:event_backButton2ActionPerformed
                   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       FlatLightLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PerpusApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton backButton1;
    private javax.swing.JButton backButton2;
    private javax.swing.JButton btnCekData;
    private javax.swing.JButton btnPeminjaman;
    private javax.swing.JButton btnPengembalian;
    private javax.swing.JButton btnSimpanData;
    private javax.swing.JCheckBox buku1;
    private javax.swing.JCheckBox buku2;
    private javax.swing.JCheckBox buku3;
    private javax.swing.JCheckBox buku4;
    private javax.swing.JCheckBox buku5;
    private javax.swing.JCheckBox buku6;
    private javax.swing.JCheckBox bukuBalik1;
    private javax.swing.JCheckBox bukuBalik2;
    private javax.swing.JCheckBox bukuBalik3;
    private javax.swing.JCheckBox bukuBalik4;
    private javax.swing.JCheckBox bukuBalik5;
    private javax.swing.JCheckBox bukuBalik6;
    private javax.swing.JButton doneButton;
    private javax.swing.JTextField inID1;
    private javax.swing.JTextField inID2;
    private javax.swing.JTextField inNama1;
    private javax.swing.JTextField inNama2;
    private javax.swing.JTextField inWaktu1;
    private javax.swing.JTextField inWaktu2;
    private javax.swing.JLabel infoStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel out1;
    private javax.swing.JLabel out2;
    private javax.swing.JLabel out3;
    private javax.swing.JLabel out4;
    private javax.swing.JTextArea outDaftar;
    private javax.swing.JScrollPane outListBuku;
    private javax.swing.JPanel paneLIndex;
    private javax.swing.JPanel panelKembali;
    private javax.swing.JPanel panelOutput;
    private javax.swing.JPanel panelPinjam;
    private javax.swing.JPanel parent;
    private javax.swing.JPanel subPanel1;
    private javax.swing.JPanel subPanel2;
    private javax.swing.JPanel subPanel3;
    private javax.swing.JLabel tidakValid;
    private javax.swing.JLabel tidakValid2;
    // End of variables declaration//GEN-END:variables
}
